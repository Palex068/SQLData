CREATE TABLE person_discounts (
    id bigint PRIMARY KEY,
    person_id bigint,
    pizzeria_id bigint,
    discount numeric,
    CONSTRAINT fk_person_discounts_person_id FOREIGN KEY (person_id) REFERENCES person (id),
    CONSTRAINT fk_person_discounts_pizzeria_id FOREIGN KEY (pizzeria_id) REFERENCES pizzeria (id)
);

/* Давайте расширим нашу модель данных, включив в нее новую
 * функцию для бизнеса. Каждый человек хочет получать персональную
 * скидку, и каждый бизнес хочет быть ближе к клиентам.
 *
 * Пожалуйста, подумайте о персональных скидках для посетителей,
 * с одной стороны, и для ресторанов-пиццерий - с другой.
 * Необходимо создать новую реляционную таблицу (пожалуйста,
 * задайте имя person_discounts) со следующими правилами.
 *
 * + задайте атрибут id как первичный ключ (пожалуйста,
 *   посмотрите на столбец id в существующих таблицах и
 *   выберите тот же тип данных).
 * + установите для атрибутов person_id и pizzeria_id
 *   внешние ключи для соответствующих таблиц (типы данных
 *   должны быть такими же, как для столбцов id в
 *   соответствующих родительских таблицах).
 * + пожалуйста, задайте явные имена для ограничений внешних
 *   ключей с помощью шаблона fk_{имя_таблицы}_{имя_столбца},
 *   например, fk_person_discounts_person_id
 * + добавьте атрибут скидки, чтобы сохранить значение скидки
 *   в процентах. Помните, что величина скидки может быть числом
 *   с плавающей точкой (пожалуйста, просто используйте числовой
 *   тип данных). Поэтому, пожалуйста, выберите соответствующий
 *   тип данных, чтобы учесть эту возможность.
 */
select
    count(*) = 1 as check
from
    pg_tables
where
    tablename = 'person_discounts';